export type EventType = {
  time: string;
  event: string;
};

export interface GoogleEvent {
  event: Event;
  when: string;
}

export interface Event {
  kind: string;
  etag: string;
  id: string;
  status: string;
  htmlLink: string;
  created: string;
  updated: string;
  summary: string;
  location: string;
  creator: Creator;
  organizer: Creator;
  start: End;
  end: End;
  recurringEventId: string;
  originalStartTime: End;
  iCalUID: string;
  sequence: number;
  reminders: Reminders;
  eventType: string;
}

export interface Creator {
  email: string;
  self: boolean;
}

export interface End {
  dateTime: string;
  timeZone: string;
}

export interface Reminders {
  useDefault: boolean;
}

// Generated by https://quicktype.io

export interface GoogleMessage {
  result: Result;
  body: string;
  headers: Headers;
  status: number;
  statusText: null;
}

export interface Headers {
  "cache-control": string;
  "content-encoding": string;
  "content-length": string;
  "content-type": string;
  date: string;
  server: string;
  vary: string;
}

export interface Result {
  id: string;
  threadId: string;
  labelIds: string[];
  snippet: string;
  payload: Payload;
  sizeEstimate: number;
  historyId: string;
  internalDate: string;
}

export interface Payload {
  partId: string;
  mimeType: string;
  filename: string;
  headers: Header[];
  body: PayloadBody;
  parts: Part[];
}

export interface PayloadBody {
  size: number;
}

export interface Header {
  name: string;
  value: string;
}

export interface Part {
  partId: string;
  mimeType: string;
  filename: string;
  headers: Header[];
  body: PartBody;
}

export interface PartBody {
  size: number;
  data: string;
}
